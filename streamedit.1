.\" Automatically generated by Pandoc 2.9.2
.\"
.TH "streamedit" "1" "2020-03-07" "" ""
.hy
.SH NAME
.PP
streamedit - a byte stream editor
.SH SYNOPSIS
.PP
streamedit options actions ...
output
.SH DESCRIPTION
.PP
streamedit is a byte oriented stream editor, designed for manipulations
of byte streams.
It has no understanding of any higher level, does not understand UTF8,
character sets, encodings (or whatever you fancy), and changes bytes
even if that breaks higher level encodings.
In fact, breaking higher levels is its main purpose.
.SH OPTIONS
.SS --help, -h
.PP
show usage information.
.SS --seed int
.PP
set the random number seed (-1: by the current nanosecond, which is the
default, anyway).
This is used inside the test suite.
.SS --verbose
.PP
be verbose about changes.
It prints input position, output position, and what it does.
This sometimes helps to understand what is going on.
.SS --version
.PP
show the version information.
.SH ACTIONS
.PP
\f[C]actions ...\f[R] is a series of actions, processed in order.
If the program reaches the end of the actions, it will continue with the
first one, unless \f[C]end\f[R] or \f[C]*\f[R] has been encountered.
.PP
An action is either:
.SS PREFIX
.PP
The prefix for the next action (only), defaulting to 1.
.PP
PREFIX is a number.
1023, x3ff and o1777 all mean the same thing.
The prefix determines how often the next action will be executed.
.PP
If you append a \f[C]\[at]\f[R] sign to PREFIX, then PREFIX determines
up to which position in the input stream the next action will be
executed (counted from 0).
If that position has already been passed, the action will not be
executed.
.PP
If you append an literal \f[C]r\f[R] to PREFIX, the meaning changes to
\[aq]a random number of bytes below N\[aq] (0 to N-1 bytes).
\f[I]Note\f[R]: This may change in the future to mean 0 to N bytes.
.SS *
.PP
A special prefix meaning \[dq]all following bytes\[dq].
Alias: all.
This especially avoids the looping at the end of the action list.
.SS -
.PP
Deletes PREFIX bytes.
#### p Prints PREFIX bytes.
#### r Changes PREFIX bytes to a random value (which may be the original
one) #### R Changes PREFIX bytes to a random value (different from the
original one) #### =BYTE Changes PREFIX bytes to BYTE.
.SS +BYTE
.PP
Inserts PREFIX times BYTE at the current position.
.SS +r
.PP
Inserts PREFIX times a random byte at the current position.
#### |BYTE \[dq]Or\[dq]s the current byte with BYTE.
#### oBYTE \[dq]Or\[dq]s the current byte with BYTE (an alias for ease
of use).
#### &BYTE \[dq]And\[dq]s the current byte with BYTE.
#### aBYTE \[dq]And\[dq]s the current byte with BYTE.
#### \[ha]BYTE \[dq]Xor\[dq]s the current byte with BYTE.
#### vBYTE Search for the PREFIX occurance of BYTE and print all bytes
before it (\[dq]v\[dq] as in \[dq]verbose search\[dq]).
.PP
Two searches for the same byte must not follow each other directly, as
this would mean an endless loop.
The program in that case bails out with an error.
#### qBYTE
.PP
Search for the PREFIX occurance of BYTE without printing the bytes
before it (\[dq]q\[dq] as in \[dq]quiet search\[dq]).
.SS end
.PP
is the same as \f[C]* p\f[R] (print all until reaching the end of the
input).
.SH BYTES
.PP
\f[C]BYTE\f[R] as used above is a bytes value.
By default it is an decimal number (\[dq]64\[dq] stands for
\[aq]\[at]\[aq]), but you may use \[aq]x\[aq] and \[aq]o\[aq] as
prefixes for hexadecimal and octal numbers, and you may use \[aq]c\[aq]
as prefix for a character used literally.
.PP
\[dq]64\[dq], \[dq]c\[at]\[dq], \[dq]x40\[dq] and \[dq]o100\[dq] all
mean the very same thing, the well known character separating localpart
and domain of an email address.
.SH EXAMPLES
.SS remove the first byte of input
.PP
streamedit v6 p v6 - /dev/tty
.PP
\[dq]delete every second NAK character found in the input stream (this
would make binary transfers impossible, and slow down text file
transfers to a crawl.
oh well, xmoden isn\[aq]t exactly fast anyway).
.SS remove all X
.PP
echo abcXdefXghiXjkl | streamedit vcX -
.PP
\[dq]verbose search for character X, then delete, then repeat at the
start.\[dq]
.SS replace all X with Y
.PP
echo abcXdefXghiXjkl | streamedit vcX =cY
.PP
\[dq]verbose search for character X, then set to character Y, then
repeat at the start.\[dq]
.SS remove X to second X, and third X to fourth X
.PP
echo abcXdefXghiXjklXmno | streamedit vcX - qcX -
.PP
\[dq]verbose search for character X, then set to character Y, then
repeat at the start.\[dq]
.SS randomly remove one of byte four to seven, print all else.
.PP
echo abcXdefXghiXjklXmno | streamedit 4 p 4r p - * p
.PP
\[dq]print 4 bytes, print 0..3 bytes, delete one, print the
remainder.\[dq]
.SS randomly remove 0 to three bytes starting from position 4, print all else.
.PP
echo abcXdefXghiXjklXmno | streamedit 4 p 4r - * p
.SS some random change every 0 to 4 bytes
.PP
echo abcXdefXghiXjklXmno | streamedit 5r \[ti] | od -t x1
.PP
The \f[C]od\f[R] is there to protect your terminal.
.SH BUGS
.PP
None are known at the time of writing, but alas, all useful software has
bugs.
If you find one, please report it either to your distributor,
<https://github.com/UweOhse/streamedit/issues>, or <uwe@ohse.de>.
.SH NOTES
.PP
streamedit is a by-product of the lrzsz(1) package, and has been
designed to allow simulations of line errors.
.SH AUTHORS
Uwe Ohse.
